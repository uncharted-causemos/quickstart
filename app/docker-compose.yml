version: '3.7'

services:
  # Causemos
  causemos:
    image: docker.uncharted.software/worldmodeler/wm-server:prod
    depends_on:
      - wm-curation-recommendation
      - wm-go
    deploy:
      placement:
        constraints: [node.role != manager]
      update_config:
        parallelism: 1
        delay: 60s
        failure_action: rollback
      restart_policy:
        condition: any
      replicas: 1
      resources:
        limits:
          memory: 2048M
          cpus: '2'
    secrets:
      - source: CAUSEMOS_ENV_FILE
        target: /server/.env
    logging:
      driver: "json-file"
      options:
        max-size: "400k"
        max-file: "2"
    networks:
      - common-net
    ports:
      - "3003:3000"
    extra_hosts:
      - "host.docker.internal:host-gateway"
  
  # Data service
  wm-go:
    image: docker.uncharted.software/worldmodeler/wm-go:prod
    deploy:
      placement:
        constraints: [node.role != manager]
      update_config:
        parallelism: 1
        delay: 60s
        failure_action: rollback
      replicas: 1
      restart_policy:
        condition: any
      resources:
        limits:
          memory: 2048M
          cpus: '2'
    secrets:
      - source: WM_GO_ENV_FILE
        target: /wm.env
    logging:
      driver: "json-file"
      options:
        max-size: "400k"
        max-file: "2"
    networks:
      - common-net
    ports:
      - "4500:4500"
    extra_hosts:
      - "host.docker.internal:host-gateway"
  
  # recommendation stack
  redis:
    image: 'docker-hub.uncharted.software/redis:5.0.4-stretch'
    networks:
      - common-net
    volumes:
      - type: volume
        source: redis
        target: /data
        volume:
          nocopy: true

  wm-curation-recommendation:
    image: docker.uncharted.software/worldmodeler/wm-curation-recommendation:prod
    deploy:
      placement:
        constraints: [node.role != manager]
      update_config:
        parallelism: 1
        delay: 60s
        failure_action: rollback
      restart_policy:
        condition: any
      replicas: 1
      resources:
        limits:
          memory: 2048M
          cpus: '2'
    secrets:
      - source: WM_CURATION_RECOMMENDATIONS_ENV_FILE
        target: /app/.env
    logging:
      driver: "json-file"
      options:
        max-size: "400k"
        max-file: "2"
    networks:
      - common-net
    ports:
      - "5005:5000"
    links:
      - 'redis'
    depends_on:
      - 'redis'
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - type: bind
        source: ./data
        target: /app/data
      - type: volume
        source: ml_models
        target: /app/resources/ml_models
        volume:
          nocopy: true

  celery:
    image: docker.uncharted.software/worldmodeler/wm-curation-recommendation:prod
    deploy:
      placement:
        constraints: [node.role != manager]
      update_config:
        parallelism: 1
        delay: 60s
        failure_action: rollback
      restart_policy:
        condition: any
      replicas: 1
      resources:
        limits:
          memory: 2048M
          cpus: '2'
    networks:
      - common-net
    secrets:
      - source: WM_CURATION_RECOMMENDATIONS_ENV_FILE
        target: /app/.env
    links:
      - 'redis'
    depends_on:
      - 'redis'
    command: celery -A web.celery.worker.celery worker --loglevel=info
    volumes:
      - type: bind
        source: ./data
        target: /app/data
      - type: volume
        source: ml_models
        target: /app/resources/ml_models
        volume:
          nocopy: true

  
  # WM request queue stack
  wm-queue:
    image: docker.uncharted.software/worldmodeler/wm-request-queue:latest
    deploy:
      placement:
        constraints: [node.role != manager]
      update_config:
        parallelism: 1
        delay: 60s
        failure_action: rollback
      restart_policy:
        condition: any
      replicas: 1
      resources:
        limits:
          memory: 2048M
          cpus: '2'
    secrets:
      - source: WM_QUEUE_ENV_FILE
        target: /wm.env
    logging:
      driver: "json-file"
      options:
        max-size: "400k"
        max-file: "2"
    networks:
      - common-net
    ports:
      - "4040:4040"
    extra_hosts:
      - "host.docker.internal:host-gateway"

secrets:
  WM_GO_ENV_FILE:
    file: ./envs/wm-go.env
  WM_CURATION_RECOMMENDATIONS_ENV_FILE:
    file: ./envs/wm-curation-recommendation.env
  WM_QUEUE_ENV_FILE:
    file: ./envs/wm-queue.env
  CAUSEMOS_ENV_FILE:
    file: ./envs/causemos.env

networks:
  common-net:
    name: common-net
    driver: bridge

volumes:
  redis: {}
  ml_models: {}
