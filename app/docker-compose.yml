version: '3.7'

services:
  # Elastic
  elasticsearch:
    image: uncharted/wm-causemos-elastic:latest
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:9200"]
        interval: 30s
        timeout: 10s
        retries: 5
    environment:
      - xpack.security.enabled=false
      - "discovery.type=single-node"
    networks:
      - common-net
    ports:
      - 9200:9200

  # Causemos
  causemos:
    image: uncharted/wm-causemos:latest
    depends_on:
      - wm-curation-recommendation
      - wm-go
    deploy:
      placement:
        constraints: [node.role != manager]
      replicas: 1
      resources:
        limits:
          memory: 1024M
          cpus: '2'
    depends_on:
      elasticsearch:
        condition: service_healthy
    secrets:
      - source: CAUSEMOS_ENV_FILE
        target: /server/.env
    networks:
      - common-net
    ports:
      - "3003:3000"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Anansi
  anansi:
    image: uncharted/wm-causemos-anansi:latest
    deploy:
      placement:
        constraints: [node.role != manager]
      replicas: 1
      resources:
        limits:
          memory: 1048M
          cpus: '2'
    secrets:
      - source: ANANSI_ENV_FILE
        target: /web/.env
    networks:
      - common-net
    ports:
      - "6000:6000"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  
  # Data service
  causemos-data-service:
    image: uncharted/wm-causemos-data-service:latest
    deploy:
      placement:
        constraints: [node.role != manager]
      replicas: 1
      resources:
        limits:
          memory: 1024M
          cpus: '2'
    secrets:
      - source: DATA_SERVICE_ENV_FILE
        target: /wm.env
    networks:
      - common-net
    ports:
      - "4500:4500"
    extra_hosts:
      - "host.docker.internal:host-gateway"
  
  # recommendation stack
  redis:
    image: redis:5.0.4-stretch
    networks:
      - common-net
    volumes:
      - type: volume
        source: redis
        target: /data
        volume:
          nocopy: true

  causemos-recommendation-service:
    image: uncharted/wm-causemos-recommendation-service:latest
    deploy:
      placement:
        constraints: [node.role != manager]
      replicas: 1
      resources:
        limits:
          memory: 2048M
          cpus: '2'
    secrets:
      - source: RECOMMENDATIONS_ENV_FILE
        target: /app/.env
    networks:
      - common-net
    ports:
      - "5005:5000"
    links:
      - 'redis'
    depends_on:
      - 'redis'
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - type: bind
        source: ./data
        target: /app/data
      - type: volume
        source: ml_models
        target: /app/resources/ml_models
        volume:
          nocopy: true

  celery:
    image: uncharted/wm-causemos-recommendation-service:latest
    deploy:
      placement:
        constraints: [node.role != manager]
      replicas: 1
      resources:
        limits:
          memory: 2048M
          cpus: '2'
    networks:
      - common-net
    secrets:
      - source: RECOMMENDATIONS_ENV_FILE
        target: /app/.env
    links:
      - 'redis'
    depends_on:
      - 'redis'
    command: celery -A web.celery.worker.celery worker --loglevel=info
    volumes:
      - type: bind
        source: ./data
        target: /app/data
      - type: volume
        source: ml_models
        target: /app/resources/ml_models
        volume:
          nocopy: true

  
  # WM request queue stack
  causemos-queue-service:
    image: uncharted/wm-causemos-queue-service:latest
    deploy:
      placement:
        constraints: [node.role != manager]
      replicas: 1
      resources:
        limits:
          memory: 1024M
          cpus: '2'
    secrets:
      - source: QUEUE_ENV_FILE
        target: /wm.env
    networks:
      - common-net
    ports:
      - "4040:4040"
    extra_hosts:
      - "host.docker.internal:host-gateway"

secrets:
  DATA_SERVICE_ENV_FILE:
    file: ./envs/wm-go.env
  RECOMMENDATIONS_ENV_FILE:
    file: ./envs/wm-curation-recommendation.env
  QUEUE_ENV_FILE:
    file: ./envs/wm-queue.env
  CAUSEMOS_ENV_FILE:
    file: ./envs/causemos.env
  ANANSI_ENV_FILE:
    file: ./envs/anansi.env


networks:
  common-net:
    name: common-net
    driver: bridge

volumes:
  redis: {}
  ml_models: {}
